{"ast":null,"code":"var _jsxFileName = \"/home/jbrooks/Documents/School/MIT/modules/module20/react-todo/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Card } from \"react-bootstrap\"; // user input - includes validation\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(_ref) {\n  _s();\n\n  let {\n    addTodo\n  } = _ref;\n  const [value, setValue] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, description);\n    console.log(JSON.stringify(value));\n    setValue(\"\");\n    setDescription(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-todo\",\n            children: \"Add Todo...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-todo\",\n          type: \"text\",\n          className: \"input\",\n          value: value,\n          placeholder: \"...\",\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-todo-description\",\n        children: \"Optional: Add a description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"new-todo-description\",\n        type: \"text\",\n        className: \"input\",\n        value: description,\n        placeholder: \"...\",\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"success\",\n        size: \"lg\",\n        children: \"Save Todo Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"GZewv4Zcq24suS8O9xCHngSa7es=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/jbrooks/Documents/School/MIT/modules/module20/react-todo/src/components/TodoForm.js"],"names":["React","Button","Card","TodoForm","addTodo","value","setValue","useState","description","setDescription","handleSubmit","e","preventDefault","console","log","JSON","stringify","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B,C,CAEA;;;;AACA,SAASC,QAAT,OAA+B;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,KAAK,CAACO,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACP,KAAL,EAAY;AACZD,IAAAA,OAAO,CAACC,KAAD,EAAQG,WAAR,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeX,KAAf,CAAZ;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAG,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAPD;;AASA,sBACE,QAAC,IAAD;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAA,gCACE;AAAA,iCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,SAAS,EAAC,OAHZ;AAIE,UAAA,KAAK,EAAEL,KAJT;AAKE,UAAA,WAAW,EAAC,KALd;AAME,UAAA,QAAQ,EAAGM,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACM,MAAF,CAASZ,KAAV;AAN3B;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAO,QAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAiBE;AACE,QAAA,EAAE,EAAC,sBADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,OAHZ;AAIE,QAAA,KAAK,EAAEG,WAJT;AAKE,QAAA,WAAW,EAAC,KALd;AAME,QAAA,QAAQ,EAAGG,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACM,MAAF,CAASZ,KAAV;AANjC;AAAA;AAAA;AAAA;AAAA,cAjBF,eAyBE;AAAA;AAAA;AAAA;AAAA,cAzBF,eA0BE;AAAA;AAAA;AAAA;AAAA,cA1BF,eA2BE;AAAA;AAAA;AAAA;AAAA,cA3BF,eA4BE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAwC,QAAA,IAAI,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAjDQF,Q;;KAAAA,Q;AAmDT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\n\n// user input - includes validation\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, description);\n    console.log(JSON.stringify(value));\n    setValue(\"\");\n    setDescription(\"\");\n  };\n\n  return (\n    <Card>\n      <form onSubmit={handleSubmit}>\n        <Card.Header>\n          <div>\n            <label htmlFor=\"new-todo\">Add Todo...</label>\n          </div>\n          <input\n            id=\"new-todo\"\n            type=\"text\"\n            className=\"input\"\n            value={value}\n            placeholder=\"...\"\n            onChange={(e) => setValue(e.target.value)}\n          />\n        </Card.Header>\n        <label htmlFor=\"new-todo-description\">\n          Optional: Add a description\n        </label>\n        <input\n          id=\"new-todo-description\"\n          type=\"text\"\n          className=\"input\"\n          value={description}\n          placeholder=\"...\"\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <br />\n        <br />\n        <br />\n        <Button type=\"submit\" variant=\"success\" size=\"lg\">\n          Save Todo Item\n        </Button>\n      </form>\n    </Card>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}