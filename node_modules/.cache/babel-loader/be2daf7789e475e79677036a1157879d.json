{"ast":null,"code":"import _slicedToArray from\"/home/jbrooks/Documents/GitHub/todolist/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Button,Card,Collapse}from\"react-bootstrap\";import{FaPencilAlt}from\"react-icons/fa\";import{Api}from\"./Api\";// user input - includes validation\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoForm(_ref){var addTodo=_ref.addTodo;var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),description=_React$useState4[0],setDescription=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),cardOpen=_React$useState6[0],setCardOpen=_React$useState6[1];var toggleOpen=function toggleOpen(){return setCardOpen(!cardOpen);};var handleSubmit=function handleSubmit(e){e.preventDefault();if(!value)return;Api.createItem(value).then(function(persistedItem){addTodo(value,description);console.log(JSON.stringify(value));setValue(\"\");setDescription(\"\");});/* addTodo(value, description);\n    console.log(JSON.stringify(value));\n    setValue(\"\");\n    setDescription(\"\"); */};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{className:\"form-toggle\",onClick:toggleOpen,\"aria-controls\":\"todo-form\",\"aria-expanded\":cardOpen,children:/*#__PURE__*/_jsx(\"h3\",{children:cardOpen?\"Close To Do form\":\"Start a new To Do entry\"})}),/*#__PURE__*/_jsx(Collapse,{in:cardOpen,children:/*#__PURE__*/_jsx(Card,{id:\"todo-form\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Card.Header,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(FaPencilAlt,{className:\"form-label-icon\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"new-todo\",children:\"Add Todo...\"})]}),/*#__PURE__*/_jsx(\"input\",{id:\"new-todo\",type:\"text\",className:\"input\",value:value,placeholder:\"...\",onChange:function onChange(e){return setValue(e.target.value);}})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"new-todo-description\",children:\"Optional: Add a description\"}),/*#__PURE__*/_jsx(\"input\",{id:\"new-todo-description\",type:\"text\",className:\"input\",value:description,placeholder:\"...\",onChange:function onChange(e){return setDescription(e.target.value);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"success\",size:\"lg\",children:\"Save Todo Item\"})]})})})]});}export default TodoForm;","map":{"version":3,"sources":["/home/jbrooks/Documents/GitHub/todolist/src/components/TodoForm.js"],"names":["React","Button","Card","Collapse","FaPencilAlt","Api","TodoForm","addTodo","useState","value","setValue","description","setDescription","cardOpen","setCardOpen","toggleOpen","handleSubmit","e","preventDefault","createItem","then","persistedItem","console","log","JSON","stringify","target"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,QAAvB,KAAuC,iBAAvC,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,GAAT,KAAoB,OAApB,CAEA;wFACA,QAASC,CAAAA,QAAT,MAA+B,IAAXC,CAAAA,OAAW,MAAXA,OAAW,CAC7B,oBAA0BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA1B,oDAAOC,KAAP,qBAAcC,QAAd,qBACA,qBAAsCV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAtC,qDAAOG,WAAP,qBAAoBC,cAApB,qBACA,qBAAgCZ,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAhC,qDAAOK,QAAP,qBAAiBC,WAAjB,qBACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMD,CAAAA,WAAW,CAAC,CAACD,QAAF,CAAjB,EAAnB,CAEA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACA,GAAI,CAACT,KAAL,CAAY,OACZJ,GAAG,CAACc,UAAJ,CAAeV,KAAf,EAAsBW,IAAtB,CAA2B,SAACC,aAAD,CAAmB,CAC5Cd,OAAO,CAACE,KAAD,CAAQE,WAAR,CAAP,CACAW,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAehB,KAAf,CAAZ,EACAC,QAAQ,CAAC,EAAD,CAAR,CACAE,cAAc,CAAC,EAAD,CAAd,CACD,CALD,EAMA;AACJ;AACA;AACA,0BACG,CAbD,CAeA,mBACE,oCACE,KAAC,MAAD,EACE,SAAS,CAAC,aADZ,CAEE,OAAO,CAAEG,UAFX,CAGE,gBAAc,WAHhB,CAIE,gBAAeF,QAJjB,uBAME,oBAAKA,QAAQ,CAAG,kBAAH,CAAwB,yBAArC,EANF,EADF,cASE,KAAC,QAAD,EAAU,EAAE,CAAEA,QAAd,uBACE,KAAC,IAAD,EAAM,EAAE,CAAC,WAAT,uBACE,cAAM,QAAQ,CAAEG,YAAhB,wBACE,MAAC,IAAD,CAAM,MAAN,yBACE,oCACE,KAAC,WAAD,EAAa,SAAS,CAAC,iBAAvB,EADF,cAEE,cAAO,OAAO,CAAC,UAAf,yBAFF,GADF,cAKE,cACE,EAAE,CAAC,UADL,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAC,OAHZ,CAIE,KAAK,CAAEP,KAJT,CAKE,WAAW,CAAC,KALd,CAME,QAAQ,CAAE,kBAACQ,CAAD,QAAOP,CAAAA,QAAQ,CAACO,CAAC,CAACS,MAAF,CAASjB,KAAV,CAAf,EANZ,EALF,GADF,cAeE,cAAO,OAAO,CAAC,sBAAf,yCAfF,cAkBE,cACE,EAAE,CAAC,sBADL,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAC,OAHZ,CAIE,KAAK,CAAEE,WAJT,CAKE,WAAW,CAAC,KALd,CAME,QAAQ,CAAE,kBAACM,CAAD,QAAOL,CAAAA,cAAc,CAACK,CAAC,CAACS,MAAF,CAASjB,KAAV,CAArB,EANZ,EAlBF,cA0BE,aA1BF,cA2BE,aA3BF,cA4BE,aA5BF,cA6BE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,CAAwC,IAAI,CAAC,IAA7C,4BA7BF,GADF,EADF,EATF,GADF,CAiDD,CAED,cAAeH,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport { Button, Card, Collapse } from \"react-bootstrap\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport { Api } from \"./Api\";\n\n// user input - includes validation\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [cardOpen, setCardOpen] = React.useState(false);\n  const toggleOpen = () => setCardOpen(!cardOpen);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    Api.createItem(value).then((persistedItem) => {\n      addTodo(value, description);\n      console.log(JSON.stringify(value));\n      setValue(\"\");\n      setDescription(\"\");\n    });\n    /* addTodo(value, description);\n    console.log(JSON.stringify(value));\n    setValue(\"\");\n    setDescription(\"\"); */\n  };\n\n  return (\n    <div>\n      <Button\n        className=\"form-toggle\"\n        onClick={toggleOpen}\n        aria-controls=\"todo-form\"\n        aria-expanded={cardOpen}\n      >\n        <h3>{cardOpen ? \"Close To Do form\" : \"Start a new To Do entry\"}</h3>\n      </Button>\n      <Collapse in={cardOpen}>\n        <Card id=\"todo-form\">\n          <form onSubmit={handleSubmit}>\n            <Card.Header>\n              <div>\n                <FaPencilAlt className=\"form-label-icon\" />\n                <label htmlFor=\"new-todo\">Add Todo...</label>\n              </div>\n              <input\n                id=\"new-todo\"\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                placeholder=\"...\"\n                onChange={(e) => setValue(e.target.value)}\n              />\n            </Card.Header>\n            <label htmlFor=\"new-todo-description\">\n              Optional: Add a description\n            </label>\n            <input\n              id=\"new-todo-description\"\n              type=\"text\"\n              className=\"input\"\n              value={description}\n              placeholder=\"...\"\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            <br />\n            <br />\n            <br />\n            <Button type=\"submit\" variant=\"success\" size=\"lg\">\n              Save Todo Item\n            </Button>\n          </form>\n        </Card>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}