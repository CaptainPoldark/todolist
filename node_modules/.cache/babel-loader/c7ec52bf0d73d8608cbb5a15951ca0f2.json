{"ast":null,"code":"var _jsxFileName = \"/home/jbrooks/Documents/School/MIT/modules/module20/react-todo/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Card, Collapse } from \"react-bootstrap\";\nimport { FaPencilAlt } from \"react-icons/fa\"; // user input - includes validation\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(_ref) {\n  _s();\n\n  let {\n    addTodo\n  } = _ref;\n  const [value, setValue] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [cardOpen, setCardOpen] = React.useState(false);\n\n  const toggleOpen = () => setCardOpen(!cardOpen);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, description);\n    console.log(JSON.stringify(value));\n    setValue(\"\");\n    setDescription(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"form-toggle\",\n      onClick: toggleOpen,\n      \"aria-controls\": \"todo-form\",\n      \"aria-expanded\": cardOpen,\n      children: cardOpen ? \"Close To Do form\" : \"Start a new To Do entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      in: cardOpen,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: \"todo-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FaPencilAlt, {\n                className: \"form-label-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"new-todo\",\n                children: \"Add Todo...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"new-todo\",\n              type: \"text\",\n              className: \"input\",\n              value: value,\n              placeholder: \"...\",\n              onChange: e => setValue(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-todo-description\",\n            children: \"Optional: Add a description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"new-todo-description\",\n            type: \"text\",\n            className: \"input\",\n            value: description,\n            placeholder: \"...\",\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"success\",\n            size: \"lg\",\n            children: \"Save Todo Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"izLLsSfPW7CHo2g81Tx1ImxhFMU=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/jbrooks/Documents/School/MIT/modules/module20/react-todo/src/components/TodoForm.js"],"names":["React","Button","Card","Collapse","FaPencilAlt","TodoForm","addTodo","value","setValue","useState","description","setDescription","cardOpen","setCardOpen","toggleOpen","handleSubmit","e","preventDefault","console","log","JSON","stringify","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAuC,iBAAvC;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CAEA;;;;AACA,SAASC,QAAT,OAA+B;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bb,KAAK,CAACS,QAAN,CAAe,KAAf,CAAhC;;AACA,QAAMK,UAAU,GAAG,MAAMD,WAAW,CAAC,CAACD,QAAF,CAApC;;AAEA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACV,KAAL,EAAY;AACZD,IAAAA,OAAO,CAACC,KAAD,EAAQG,WAAR,CAAP;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAed,KAAf,CAAZ;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAG,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAPD;;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AACE,MAAA,OAAO,EAAEG,UADX;AAEE,uBAAc,WAFhB;AAGE,uBAAeF,QAHjB;AAAA,gBAKGA,QAAQ,GAAG,kBAAH,GAAwB;AALnC;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEA,QAAd;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAEG,YAAhB;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,oCACE;AAAA,sCACE,QAAC,WAAD;AAAa,gBAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,gBAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AACE,cAAA,EAAE,EAAC,UADL;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,SAAS,EAAC,OAHZ;AAIE,cAAA,KAAK,EAAER,KAJT;AAKE,cAAA,WAAW,EAAC,KALd;AAME,cAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACM,MAAF,CAASf,KAAV;AAN3B;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE;AAAO,YAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eAkBE;AACE,YAAA,EAAE,EAAC,sBADL;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,SAAS,EAAC,OAHZ;AAIE,YAAA,KAAK,EAAEG,WAJT;AAKE,YAAA,WAAW,EAAC,KALd;AAME,YAAA,QAAQ,EAAGM,CAAD,IAAOL,cAAc,CAACK,CAAC,CAACM,MAAF,CAASf,KAAV;AANjC;AAAA;AAAA;AAAA;AAAA,kBAlBF,eA0BE;AAAA;AAAA;AAAA;AAAA,kBA1BF,eA2BE;AAAA;AAAA;AAAA;AAAA,kBA3BF,eA4BE;AAAA;AAAA;AAAA;AAAA,kBA5BF,eA6BE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAC,SAA9B;AAAwC,YAAA,IAAI,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GA/DQF,Q;;KAAAA,Q;AAiET,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Button, Card, Collapse } from \"react-bootstrap\";\nimport { FaPencilAlt } from \"react-icons/fa\";\n\n// user input - includes validation\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [cardOpen, setCardOpen] = React.useState(false);\n  const toggleOpen = () => setCardOpen(!cardOpen);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, description);\n    console.log(JSON.stringify(value));\n    setValue(\"\");\n    setDescription(\"\");\n  };\n\n  return (\n    <div>\n      <Button className=\"form-toggle\"\n        onClick={toggleOpen}\n        aria-controls=\"todo-form\"\n        aria-expanded={cardOpen}\n      >\n        {cardOpen ? \"Close To Do form\" : \"Start a new To Do entry\"}\n      </Button>\n      <Collapse in={cardOpen}>\n        <Card id=\"todo-form\">\n          <form onSubmit={handleSubmit}>\n            <Card.Header>\n              <div>\n                <FaPencilAlt className=\"form-label-icon\" />\n                <label htmlFor=\"new-todo\">Add Todo...</label>\n              </div>\n              <input\n                id=\"new-todo\"\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                placeholder=\"...\"\n                onChange={(e) => setValue(e.target.value)}\n              />\n            </Card.Header>\n            <label htmlFor=\"new-todo-description\">\n              Optional: Add a description\n            </label>\n            <input\n              id=\"new-todo-description\"\n              type=\"text\"\n              className=\"input\"\n              value={description}\n              placeholder=\"...\"\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            <br />\n            <br />\n            <br />\n            <Button type=\"submit\" variant=\"success\" size=\"lg\">\n              Save Todo Item\n            </Button>\n          </form>\n        </Card>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}