{"version":3,"sources":["components/Header.js","components/Todo.js","components/Api.js","components/TodoForm.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Todo","todo","keyNumber","index","remove","React","useState","showConfirm","setShowConfirm","toggleShowConfirm","taskComplete","setTaskComplete","Accordion","defaultActivekey","flush","Item","eventKey","onClick","title","Body","description","Modal","show","onClose","Title","Footer","Button","variant","Api","newItem","Promise","resolve","TodoForm","addTodo","value","setValue","setDescription","cardOpen","setCardOpen","Collapse","in","Card","id","onSubmit","e","preventDefault","then","persistedItem","console","log","JSON","stringify","htmlFor","type","placeholder","onChange","target","size","Home","isCompleted","todos","setTodos","removeTodo","selectedIndex","Number","temp","splice","Container","fluid","Row","Col","xs","todoTitle","todoDescription","newTodos","length","lg","Alert","map","i","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.904cdbd4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (<div className=\"header\"><h1>To Do List</h1></div>);\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Accordion, Modal, Button, Container, Col, Row } from \"react-bootstrap\";\nimport { FaTrashAlt, FaBiohazard, FaCheckCircle } from \"react-icons/fa\";\n\nfunction Todo({ todo, keyNumber, index, remove }) {\n  const [showConfirm, setShowConfirm] = React.useState(false);\n  const toggleShowConfirm = () => setShowConfirm(!showConfirm);\n  const [taskComplete, setTaskComplete] = React.useState(false);\n  const toggleCompleted = () => setTaskComplete(!taskComplete);\n\n  function handleTaskComplete() {\n    toggleCompleted();\n  }\n\n  function handle() {\n    toggleShowConfirm();\n    remove(index);\n  }\n  return (\n    <div>\n      <Accordion className=\"todo-list\" defaultActivekey=\"0\" flush>\n        <Accordion.Item eventKey={keyNumber}>\n          <Accordion.Header>\n            <FaCheckCircle\n              className={taskComplete ? \"todo-complete\" : \"todo-header-confirm\"}\n              onClick={handleTaskComplete}\n            />\n            <h4> {todo.title}</h4>\n            <FaTrashAlt\n              className=\"todo-header-delete\"\n              onClick={toggleShowConfirm}\n            />\n          </Accordion.Header>\n\n          <Accordion.Body>{todo.description}</Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n      <Modal show={showConfirm} onClose={toggleShowConfirm}>\n        <Modal.Header>\n          <FaBiohazard className=\"bio-hazard\"/>\n          <Modal.Title>\n            <strong className=\"me-auto\">Just making sure</strong>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Whoa! Are you sure you want to delete this To Do item?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={toggleShowConfirm}>\n            Nevermind\n          </Button>\n\n          <Button variant=\"danger\" onClick={handle}>\n            DESTROY IT!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\nexport default Todo;\n","//api simulation\n\nexport const Api = {\n    createItem: (newItem) =>{\n        return Promise.resolve(newItem);\n    }\n}","import React from \"react\";\nimport { Button, Card, Collapse } from \"react-bootstrap\";\nimport { FaPencilAlt } from \"react-icons/fa\";\nimport { Api } from \"./Api\";\n\n// user input - includes validation\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [cardOpen, setCardOpen] = React.useState(false);\n  const toggleOpen = () => setCardOpen(!cardOpen);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    Api.createItem(value).then((persistedItem) => {\n      addTodo(value, description);\n      console.log(JSON.stringify(value));\n      setValue(\"\");\n      setDescription(\"\");\n    });\n    /* addTodo(value, description);\n    console.log(JSON.stringify(value));\n    setValue(\"\");\n    setDescription(\"\"); */\n  };\n\n  return (\n    <div>\n      <Button\n        className=\"form-toggle\"\n        onClick={toggleOpen}\n        aria-controls=\"todo-form\"\n        aria-expanded={cardOpen}\n      >\n        <h3>{cardOpen ? \"Close To Do form\" : \"Start a new To Do entry\"}</h3>\n      </Button>\n      <Collapse in={cardOpen}>\n        <Card id=\"todo-form\">\n          <form onSubmit={handleSubmit}>\n            <Card.Header>\n              <div>\n                <FaPencilAlt className=\"form-label-icon\" />\n                <label htmlFor=\"new-todo\">Add Todo...</label>\n              </div>\n              <input\n                id=\"new-todo\"\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                placeholder=\"...\"\n                onChange={(e) => setValue(e.target.value)}\n              />\n            </Card.Header>\n            <label htmlFor=\"new-todo-description\">\n              Optional: Add a description\n            </label>\n            <input\n              id=\"new-todo-description\"\n              type=\"text\"\n              className=\"input\"\n              value={description}\n              placeholder=\"...\"\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            <br />\n            <br />\n            <br />\n            <Button type=\"submit\" variant=\"success\" size=\"lg\">\n              Save Todo Item\n            </Button>\n          </form>\n        </Card>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default TodoForm;\n","import React from \"react\";\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\nimport { FaGamepad } from \"react-icons/fa\";\n\nfunction Home() {\n  const [todos, setTodos] = React.useState([\n    {\n      title: \"Outwork\",\n      description:\n        \"Ferrari doesn’t advertise on TV because their customers don’t watch much of it.\",\n      isCompleted: false,\n    },\n    {\n      title: \"Out-Improve\",\n      description:\n        \"You're going to use experiences to become either bitter or better. To get better you must reflect on your mistakes.\",\n      isCompleted: false,\n    },\n    {\n      title: \"Out-Strategize\",\n      description:\n        \"If you always make the right decision, the safe decision, the one most people make, you will be the same as everyone else.\",\n      isCompleted: false,\n    },\n    {\n      title: \"Outlast\",\n      description: \"Reset, Refocus, Readjust. As many times as you need to.\",\n      isCompleted: false,\n    },\n  ]);\n\n  const addTodo = (todoTitle, todoDescription) => {\n    let title = todoTitle;\n    let description = todoDescription;\n    const newTodos = [...todos, { title, description, isCompleted: false }];\n    setTodos(newTodos);\n  };\n  const removeTodo = (selectedIndex) => {\n    var index = Number(selectedIndex);\n    let temp = [...todos];\n    temp.splice(index, 1);\n    setTodos(temp);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"list-group\">\n        <Container fluid=\"md\">\n          <Row>\n            <Col xs=\"auto\">\n              <TodoForm className=\"todo-form\" addTodo={addTodo} />\n            </Col>\n\n            <div className=\"todo-list-container\">\n              {todos.length < 1 ? (\n                <Col lg=\"auto\" className=\"empty-list-alert\">\n                  <Alert key={0} variant=\"success\"><h3>\n                    Looks like you have nothing to do today!!!</h3><br/><FaGamepad className=\"game-pad-icon\"/>\n                  </Alert>\n                </Col>\n              ) : (\n                <Col xs=\"auto\">\n                  {todos.map((todo, i) => (\n                    <Todo index={i} key={i} todo={todo} remove={removeTodo} />\n                  ))}\n                </Col>\n              )}\n            </div>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}